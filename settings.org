# -*- mode: org; coding: utf-8; -*-
#+STARTUP: overview
#+TODO: ACTIVE | DISABLED
* ACTIVE Custom variables
#+BEGIN_SRC emacs-lisp
(custom-set-variables
  '(package-selected-packages
     (quote
       (counsel swiper lorem-ipsum tabbar ace-window org-bullets which-key try use-package))))
#+END_SRC
* ACTIVE Disabling startup message / menu-bar-mode / tool-bar-mode    
#+begin_src emacs-lisp
;;(setq inhibit-startup-message t)
(menu-bar-mode -1)
#+end_src
* ACTIVE Font settings
#+begin_src emacs-lisp
(set-default-font "3270Medium nerd Font Mono Medium")
(load-file "~/.emacs.d/font-size.el")
(require 'font-size)
(font-size-init 14)
(define-key global-map (kbd "M-+") 'font-size-increase)
(define-key global-map (kbd "M--") 'font-size-decrease)
(define-key global-map (kbd "M-0") 'font-size-default)
#+end_src
* ACTIVE Theme settings 
#+begin_src emacs-lisp
;; theme settings
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")
(load-theme `tron-legacy t)
(set-background-color "#033f01a90ccc")
#+end_src
* ACTIVE Initializing package resources
#+begin_src emacs-lisp
(require 'package)
(setq package-enable-at-startup nil)
(add-to-list 'package-archives
    '("melpa" . "https://melpa.org/packages/"))
(package-initialize)

;; Bootstrap use-package
(unless (package-installed-p 'use-package)
        (package-refresh-contents)
        (package-install 'use-package))

(use-package try
        :ensure t)
(use-package which-key
        :ensure t
        :config
        (which-key-mode))
#+end_src
* ACTIVE Org-mode stuff
#+begin_src emacs-lisp
(use-package org-bullets
        :ensure t
        :config 
        (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+end_src
* ACTIVE Ido settings
#+begin_src emacs-lisp
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)

(defalias 'list-buffers 'ibuffer)
#+end_src
* ACTIVE Swiper settings
#+begin_src emacs-lisp
;; it looks like counsel is a requiremwnt for swiper
(use-package counsel
    :ensure t)

(use-package swiper
    :ensure t
    :config
    (progn
      (ivy-mode 1)
      (setq ivy-use-virtual-buffers t)
      (global-set-key "\C-s" 'swiper)
      (global-set-key (kbd "C-c C-r") 'ivy-resume)
      (global-set-key (kbd "<f6>") 'ivy-resume)
      (global-set-key (kbd "M-x") 'counsel-M-x)
      (global-set-key (kbd "C-x C-f") 'counsel-find-file)
      (global-set-key (kbd "<f1> f") 'counsel-describe-function)
      (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
      (global-set-key (kbd "<f1> l") 'counsel-load-library)
      (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
      (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
      (global-set-key (kbd "C-c g") 'counsel-git)
      (global-set-key (kbd "C-c j") 'counsel-git-grep)
      (global-set-key (kbd "C-c k") 'counsel-ag)
      (global-set-key (kbd "C-x l") 'counsel-locate)
      (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
      (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
      ))
#+end_src
